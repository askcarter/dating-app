syntax = "proto3";

// option go_package = "datingapp/pb";
package helloworld;

service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}


message User {
  int64 iD = 1;
  string displayName = 2;
  repeated int64 matches = 3;
}

message ListUsersRequest {
}

message ListUsersResponse {
  repeated User users = 1;
}

message ChatRequest {
  string message = 1;
  string sender = 2;
  int64 timestamp_created = 3;  // UTC seconds since epoch
}

message ChatResponse {
}


message HistoryRequest {
}

message HistoryResponse {
  repeated ChatRequest chatHistory = 1;    
}

message ConnectRequest {
  string userName = 1;
  string Address = 2;
}
message ConnectResponse {
}

message DisconnectRequest {
  string userName = 1;
}
message DisconnectResponse {
}

message MatchesRequest {
}
message MatchesResponse {
  repeated User users = 1;
}

service DatingGame {
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {}
  rpc SendChat(ChatRequest) returns (ChatResponse) {}
  rpc ChatHistory (HistoryRequest) returns (HistoryResponse) {}
  rpc Connect (ConnectRequest) returns (ConnectResponse) {}
  rpc Disconnect (DisconnectRequest) returns (DisconnectResponse) {}
  rpc Matches (MatchesRequest) returns (MatchesResponse) {}
}

service ClientChat {
    rpc Chat (ChatRequest) returns (ChatResponse) {}
    // rpc Match(MatchRequest) returns (MatchResponse) {}
    // rpc Unmatch(MatchRequest) returns (MatchResponse) {}    
}
